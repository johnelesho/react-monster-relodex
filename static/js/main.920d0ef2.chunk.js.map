{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","monsters","map","SearchBox","placeholder","onSearchChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAceA,EAXF,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACX,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,4BACtB,mCAAOJ,EAAQK,KAAf,OACA,4BAAKL,EAAQM,YCFZC,G,MAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACtB,OACI,qBAAKP,UAAU,YAAf,SACOO,EAASC,KAAI,SAAAT,GAAO,OACjB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,WCCtBM,G,MARG,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,eAC9B,OACI,8BACK,uBAAOX,UAAU,SAASY,KAAK,SAASF,YAAaA,EAAaG,SAAUF,QCEpEG,E,kDACnB,aAAe,IAAD,8BACZ,gBAYFH,eAAiB,SAACI,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAZtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,S,oBAMzC,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA7B,GAAO,OAC9CA,EAAQK,KAAKyB,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK7B,UAAU,MAAf,UACE,oDAAsB,uBAAtB,OAA+B,uBAA/B,oBAEA,cAAC,EAAD,CAAWU,YAAY,iBAAiBC,eAAgBe,KAAKf,iBAC7D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA3BKI,aCIlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.920d0ef2.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nconst Card = ({monster}) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}/>\r\n            <h1> { monster.name } </h1>\r\n            <p>{ monster.email }</p>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport Card from '../card/card.component.jsx'\r\n\r\nimport './card-list.styles.css'\r\n// import PropTypes from 'prop-types'\r\n\r\nexport const CardList = ({monsters}) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n              {monsters.map(monster => (\r\n                  <Card key={monster.id} monster={monster}/>\r\n         \r\n        )) }\r\n        </div>\r\n    )\r\n}\r\n\r\n// CardList.propTypes = {\r\n\r\n// }\r\n\r\n\r\n","import React from 'react'\r\nimport \"./search-box.styles.css\"\r\n\r\nconst SearchBox = ({ placeholder, onSearchChange}) => {\r\n    return (\r\n        <div>\r\n             <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={onSearchChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","\nimport './App.css';\n\nimport { Component } from 'react'\nimport { CardList } from './components/card-list/card-list.component.jsx'\n\nimport SearchBox from './components/search/search-box.component'\n\nexport default class App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters:users}))\n  }\n\n  onSearchChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <h1>  Monster Rolodex <br/> By <br/> Elesho John  </h1>\n        \n        <SearchBox placeholder='Search Monster' onSearchChange={this.onSearchChange}/>\n        <CardList monsters={filteredMonsters}/>\n           \n    </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}